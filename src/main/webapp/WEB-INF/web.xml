<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
    <!--配置一个过滤器，将所有的请求的字符编码设置为UTF-8-->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--SpringMVC的核心机制是通过Servlet实现的，在这里配置一下Servlet-->
    <!--servlet-name 表示Servlet的名字， 可以自定义，在这里定义为dispatcher，表示分发器-->
    <!--对应的Servlet 配置为SpringMVC的核心： DispatcherServlet-->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <!--init-param表示初始化参数 ， 这里我们就是让tomcat加载了最核心的那个配置文件applicationContext.xml-->
        <init-param>
            <param-name>ContextConfigLocation</param-name>
            <param-value>classpath:config/applicationContext.xml</param-value>
        </init-param>
        <!--load-on-startup表示启动顺序-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!--servlet-mapping表示serlvet的映射地址,它会拦截所有以.do为后缀的请求,接下来就会分配给对应的Controller去执行业务-->
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--<servlet-mapping>-->
    <!--&lt;!&ndash;除了.do , 我还配置了一个/ , 表示根路径的访问,即localhost:8080/ , 当访问跟的时候对应Controller中的 @RequestMapping("/")&ndash;&gt;-->
    <!--<servlet-name>dispatcher</servlet-name>-->
    <!--<url-pattern>/</url-pattern>-->
    <!--</servlet-mapping>-->
    <!---->

</web-app>
